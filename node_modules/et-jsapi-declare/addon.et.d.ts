declare namespace WPS {
    type EtWorkSheet = Et.Worksheet | object
    interface EtApiEvent extends ApiEvent {
        AddApiEventListener(EventName: 'WorkbookOpen', callback: string | ((Workbook: Et.Workbook) => void)): void;
        AddApiEventListener(EventName: 'NewWorkbook', callback: string | ((Workbook: Et.Workbook) => void)): void;
        AddApiEventListener(EventName: 'WorkbookBeforeSave', callback: string | ((Workbook: Et.Workbook, SaveAsUi: boolean) => void)): void;
        AddApiEventListener(EventName: 'WorkbookAfterSave', callback: string | ((Workbook: Et.Workbook) => void)): void;
        AddApiEventListener(EventName: 'WorkbookBeforeClose', callback: string | ((Workbook: Et.Workbook) => void)): void;
        AddApiEventListener(EventName: 'SheetSelectionChange', callback: string | ((WorkSheet: EtWorkSheet, Range: Et.Range) => void)): void;
        AddApiEventListener(EventName: 'SheetChange', callback: string | ((WorkSheet: Et.Worksheet, Range: EtWorkSheet) => void)): void;
        AddApiEventListener(EventName: 'SheetActivate', callback: string | ((WorkSheet: EtWorkSheet) => void)): void;
        AddApiEventListener(EventName: 'WindowActivate', callback: string | ((Workbook: EtWorkSheet, Window: Et.Window) => void)): void;
        AddApiEventListener(EventName: 'WindowDeactivate', callback: string | ((Workbook: EtWorkSheet, Window: Et.Window) => void)): void;
        AddApiEventListener(EventName: 'SheetBeforeDoubleClick', callback: string | ((Worksheet: EtWorkSheet, Ragne: Et.Range) => void)): void;
        AddApiEventListener(EventName: 'SheetBeforeRightClick', callback: string | ((Worksheet: EtWorkSheet, Ragne: Et.Range) => void)): void;
        AddApiEventListener(EventName: 'SheetCalculate', callback: string | ((Worksheet: EtWorkSheet) => void)): void;
        AddApiEventListener(EventName: 'WorkbookActivate', callback: string | ((Workbook: Et.Workbook) => void)): void;
        AddApiEventListener(EventName: 'WorkbookDeactivate', callback: string | ((Workbook: Et.Workbook) => void)): void;
        AddApiEventListener(EventName: 'WorkbookNewSheet', callback: string | ((Workbook: Et.Workbook, Worksheet: EtWorkSheet) => void)): void;
        AddApiEventListener(EventName: 'WindowResize', callback: string | ((Workbook: Et.Workbook, Window: Et.Window) => void)): void;
        AddApiEventListener(EventName: 'SheetFollowHyperlink', callback: string | ((Worksheet: EtWorkSheet, Target: Et.Hyperlink) => void)): void;
        AddApiEventListener(EventName: 'AfterCalculate', callback: string | (() => void)): void;
        AddApiEventListener(EventName: 'SheetBeforeDelete', callback: string | ((Worksheet: EtWorkSheet) => void)): void;
        AddApiEventListener(EventName: 'DocumentRightsInfo', callback: string | ((Document: Et.Workbook) => void)): void;

        AddApiEventListener(EventName: 'AfterLogin', callback: string | (() => void)): void;
        AddApiEventListener(EventName: 'AfterLogout', callback: string | (() => void)): void;
        AddApiEventListener(EventName: 'AfterVIPInfoChanged', callback: string | (() => void)): void;
        AddApiEventListener(EventName: 'AfterWebExtWatchingDataUpdated', callback: string | ((webExtId: number, key: string, data: any, updateType: number) => void)): void;
        AddApiEventListener(EventName: 'AfterTaskPaneShow', callback: string | (() => void)): void;
        AddApiEventListener(EventName: 'AfterTaskPaneHidden', callback: string | (() => void)): void;
        AddApiEventListener(EventName: 'DocumentBeforeNew', callback: string | (() => void)): void;
        AddApiEventListener(EventName: 'DocumentBeforeOpen', callback: string | ((filePath: string) => void)): void;
        AddApiEventListener(EventName: 'DocumentBeforeCopy', callback: string | ((Workbook: Et.Workbook, type: number) => void)): void;
        AddApiEventListener(EventName: 'DocumentBeforePaste', callback: string | ((Workbook: Et.Workbook) => void)): void;
        AddApiEventListener(EventName: 'FileAfterSave', callback: string | ((Workbook: Et.Workbook, filePath: string, format: string) => void)): void;
        AddApiEventListener(EventName: 'LinkedDataTypeConvert', callback: string | ((range: object, dataTypeId: number, dataTypeName: string, serviceId: string) => void)): void;
        AddApiEventListener(EventName: 'LinkedDataTypeChange', callback: string | ((range: object, dataTypeId: number, dataTypeName: string, serviceId: string) => void)): void;
        AddApiEventListener(EventName: 'LinkedDataTypeRefresh', callback: string | ((entitys: object) => void)): void;
        AddApiEventListener(EventName: 'LinkedDataTypeCancel', callback: string | (() => void)): void;

        RemoveApiEventListener(EventName: 'WorkbookOpen', callback?: string | ((Workbook: Et.Workbook) => void)): void;
        RemoveApiEventListener(EventName: 'NewWorkbook', callback?: string | ((Workbook: Et.Workbook) => void)): void;
        RemoveApiEventListener(EventName: 'WorkbookBeforeSave', callback?: string | ((Workbook: Et.Workbook, SaveAsUi: boolean) => void)): void;
        RemoveApiEventListener(EventName: 'WorkbookAfterSave', callback?: string | ((Workbook: Et.Workbook) => void)): void;
        RemoveApiEventListener(EventName: 'WorkbookBeforeClose', callback?: string | ((Workbook: Et.Workbook) => void)): void;
        RemoveApiEventListener(EventName: 'SheetSelectionChange', callback?: string | ((WorkSheet: EtWorkSheet, Range: Et.Range) => void)): void;
        RemoveApiEventListener(EventName: 'SheetChange', callback?: string | ((WorkSheet: Et.Worksheet, Range: EtWorkSheet) => void)): void;
        RemoveApiEventListener(EventName: 'SheetActivate', callback?: string | ((WorkSheet: EtWorkSheet) => void)): void;
        RemoveApiEventListener(EventName: 'WindowActivate', callback?: string | ((Workbook: EtWorkSheet, Window: Et.Window) => void)): void;
        RemoveApiEventListener(EventName: 'WindowDeactivate', callback?: string | ((Workbook: EtWorkSheet, Window: Et.Window) => void)): void;
        RemoveApiEventListener(EventName: 'SheetBeforeDoubleClick', callback?: string | ((Worksheet: EtWorkSheet, Ragne: Et.Range) => void)): void;
        RemoveApiEventListener(EventName: 'SheetBeforeRightClick', callback?: string | ((Worksheet: EtWorkSheet, Ragne: Et.Range) => void)): void;
        RemoveApiEventListener(EventName: 'SheetCalculate', callback?: string | ((Worksheet: EtWorkSheet) => void)): void;
        RemoveApiEventListener(EventName: 'WorkbookActivate', callback?: string | ((Workbook: Et.Workbook) => void)): void;
        RemoveApiEventListener(EventName: 'WorkbookDeactivate', callback?: string | ((Workbook: Et.Workbook) => void)): void;
        RemoveApiEventListener(EventName: 'WorkbookNewSheet', callback?: string | ((Workbook: Et.Workbook, Worksheet: EtWorkSheet) => void)): void;
        RemoveApiEventListener(EventName: 'WindowResize', callback?: string | ((Workbook: Et.Workbook, Window: Et.Window) => void)): void;
        RemoveApiEventListener(EventName: 'SheetFollowHyperlink', callback?: string | ((Worksheet: EtWorkSheet, Target: Et.Hyperlink) => void)): void;
        RemoveApiEventListener(EventName: 'AfterCalculate', callback?: string | (() => void)): void;
        RemoveApiEventListener(EventName: 'SheetBeforeDelete', callback?: string | ((Worksheet: EtWorkSheet) => void)): void;
        RemoveApiEventListener(EventName: 'DocumentRightsInfo', callback?: string | ((Document: Et.Workbook) => void)): void;

        RemoveApiEventListener(EventName: 'AfterLogin', callback?: string | (() => void)): void;
        RemoveApiEventListener(EventName: 'AfterLogout', callback?: string | (() => void)): void;
        RemoveApiEventListener(EventName: 'AfterVIPInfoChanged', callback?: string | (() => void)): void;
        RemoveApiEventListener(EventName: 'AfterWebExtWatchingDataUpdated', callback?: string | ((webExtId: number, key: string, data: any, updateType: number) => void)): void;
        RemoveApiEventListener(EventName: 'AfterTaskPaneShow', callback?: string | (() => void)): void;
        RemoveApiEventListener(EventName: 'AfterTaskPaneHidden', callback?: string | (() => void)): void;
        RemoveApiEventListener(EventName: 'DocumentBeforeNew', callback?: string | (() => void)): void;
        RemoveApiEventListener(EventName: 'DocumentBeforeOpen', callback?: string | ((filePath: string) => void)): void;
        RemoveApiEventListener(EventName: 'DocumentBeforeCopy', callback?: string | ((Workbook: Et.Workbook, type: number) => void)): void;
        RemoveApiEventListener(EventName: 'DocumentBeforePaste', callback?: string | ((Workbook: Et.Workbook) => void)): void;
        RemoveApiEventListener(EventName: 'FileAfterSave', callback?: string | ((Workbook: Et.Workbook, filePath: string, format: string) => void)): void;
        RemoveApiEventListener(EventName: 'LinkedDataTypeConvert', callback?: string | ((range: object, dataTypeId: number, dataTypeName: string, serviceId: string) => void)): void;
        RemoveApiEventListener(EventName: 'LinkedDataTypeChange', callback?: string | ((range: object, dataTypeId: number, dataTypeName: string, serviceId: string) => void)): void;
        RemoveApiEventListener(EventName: 'LinkedDataTypeRefresh', callback?: string | ((entitys: object) => void)): void;
        RemoveApiEventListener(EventName: 'LinkedDataTypeCancel', callback?: string | (() => void)): void;

    }

    type CustomFunctionJsType = string;

    interface EtAddonRoot {
        ApiEvent: EtApiEvent;

        AddCustomFunction:(namespace: string, name: string, callback: Function, metadata?: {
            description?: string,
            result: { type?: CustomFunctionJsType },
            parameters: { name?: string, type?: CustomFunctionJsType, description?: string} [],
        }) => void;
    }

}
